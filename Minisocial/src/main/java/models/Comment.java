package models;

import javax.persistence.*;
import java.util.Date;

/**
 * The Comment class represents a comment on a post, either a UserPost or a GroupPost.
 * It includes details about the comment's content, creator, associated post, and the timestamp of when the comment was created.
 *
 * This class is mapped to the "comments" table in the database.
 */
@Entity
@Table(name = "comments")
public class Comment {

    /**
     * The unique identifier for the comment.
     * This field is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "comment_id")
    private int commentId;

    /**
     * The UserPost associated with this comment.
     * This is a many-to-one relationship where a comment can be linked to a single UserPost.
     * It is nullable to allow for comments on GroupPost as well.
     */
    @ManyToOne
    @JoinColumn(name = "post_id", nullable = true) // Allowing null for GroupPost usage
    private UserPost post;

    /**
     * The GroupPost associated with this comment.
     * This is a many-to-one relationship where a comment can be linked to a single GroupPost.
     * It is nullable to allow for comments on UserPost as well.
     */
    @ManyToOne
    @JoinColumn(name = "group_post_id", nullable = true) // Allowing null for UserPost usage
    private GroupPost groupPost;

    /**
     * The User who created the comment.
     * This is a many-to-one relationship where a comment is always associated with a single User.
     */
    @ManyToOne
    @JoinColumn(name = "creator_id", nullable = false)
    private User creator;

    /**
     * The content of the comment.
     * This field holds the textual content of the comment.
     * The content is limited to 250 characters.
     */
    @Column(name = "content", length = 250, nullable = false)
    private String content;

    /**
     * The timestamp of when the comment was created.
     * This field is automatically set to the current date and time when the comment is created.
     */
    @Temporal(TemporalType.TIMESTAMP)
    private Date timestamp = new Date();

    // Getters and Setters

    /**
     * Gets the unique identifier of the comment.
     * @return the comment ID.
     */
    public int getCommentId() {
        return commentId;
    }

    /**
     * Sets the unique identifier of the comment.
     * @param commentId the comment ID to set.
     */
    public void setCommentId(int commentId) {
        this.commentId = commentId;
    }

    /**
     * Gets the UserPost associated with the comment.
     * @return the UserPost associated with the comment.
     */
    public UserPost getPost() {
        return post;
    }

    /**
     * Sets the UserPost associated with the comment.
     * @param post the UserPost to set.
     */
    public void setPost(UserPost post) {
        this.post = post;
    }

    /**
     * Gets the GroupPost associated with the comment.
     * @return the GroupPost associated with the comment.
     */
    public GroupPost getGroupPost() {
        return groupPost;
    }

    /**
     * Sets the GroupPost associated with the comment.
     * @param groupPost the GroupPost to set.
     */
    public void setGroupPost(GroupPost groupPost) {
        this.groupPost = groupPost;
    }

    /**
     * Gets the User who created the comment.
     * @return the creator of the comment.
     */
    public User getCreator() {
        return creator;
    }

    /**
     * Sets the User who created the comment.
     * @param creator the User to set as the comment creator.
     */
    public void setCreator(User creator) {
        this.creator = creator;
    }

    /**
     * Gets the content of the comment.
     * @return the content of the comment.
     */
    public String getContent() {
        return content;
    }

    /**
     * Sets the content of the comment.
     * @param content the content to set.
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * Gets the timestamp of when the comment was created.
     * @return the timestamp of the comment.
     */
    public Date getTimestamp() {
        return timestamp;
    }

    /**
     * Sets the timestamp of when the comment was created.
     * @param timestamp the timestamp to set.
     */
    public void setTimestamp(Date timestamp) {
        this.timestamp = timestamp;
    }
}
