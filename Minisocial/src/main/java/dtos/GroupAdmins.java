package dtos;

import javax.persistence.*;

import models.Group;
import models.User;

import java.io.Serializable;

/**
 * GroupAdmins â€“ Entity representing the relationship between a User and a Group with admin privileges.
 *
 * This entity establishes an association where a specific user is designated as an admin for a group.
 * It connects the User and Group entities with an administrative role.
 */
@Entity
@Table(name = "GroupAdmins")
public class GroupAdmins implements Serializable {

    /**
     * The unique identifier for this GroupAdmins relationship.
     * This is the primary key, automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The User entity who holds admin privileges in the associated group.
     * This is a mandatory relationship (cannot be null).
     */
    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    private User user;

    /**
     * The Group entity where the user is assigned as an admin.
     * This is a mandatory relationship (cannot be null).
     */
    @ManyToOne
    @JoinColumn(name = "group_id", nullable = false)
    private Group group;

    /**
     * Gets the primary key ID of this GroupAdmins relationship.
     *
     * @return The ID of the GroupAdmins record.
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the primary key ID for this GroupAdmins relationship.
     *
     * @param id The ID to set.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the User entity associated as an admin.
     *
     * @return The User who is the admin.
     */
    public User getUser() {
        return user;
    }

    /**
     * Sets the User entity to be associated as an admin.
     *
     * @param user The User to assign.
     */
    public void setUser(User user) {
        this.user = user;
    }

    /**
     * Gets the Group entity where the user is assigned as an admin.
     *
     * @return The Group entity.
     */
    public Group getGroup() {
        return group;
    }

    /**
     * Sets the Group entity where the user is assigned as an admin.
     *
     * @param group The Group to assign.
     */
    public void setGroup(Group group) {
        this.group = group;
    }

    /**
     * Returns a string representation of the GroupAdmins entity.
     *
     * @return A string containing the ID, User, and Group information.
     */
    @Override
    public String toString() {
        return "GroupAdmins{" +
                "id=" + id +
                ", user=" + user +
                ", group=" + group +
                '}';
    }
}
